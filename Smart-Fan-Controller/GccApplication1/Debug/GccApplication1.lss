
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  00000724  000007b8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000724  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000012  00800108  00800108  000007c0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000007c0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000007f0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  0000082c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000001a6  00000000  00000000  00000864  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000000ca  00000000  00000000  00000a0a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000110  00000000  00000000  00000ad4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000c4  00000000  00000000  00000be4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000001ee  00000000  00000000  00000ca8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000148  00000000  00000000  00000e96  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  00000fde  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	1d c0       	rjmp	.+58     	; 0x3c <__ctors_end>
   2:	37 c0       	rjmp	.+110    	; 0x72 <__bad_interrupt>
   4:	4b c1       	rjmp	.+662    	; 0x29c <__vector_2>
   6:	35 c0       	rjmp	.+106    	; 0x72 <__bad_interrupt>
   8:	34 c0       	rjmp	.+104    	; 0x72 <__bad_interrupt>
   a:	33 c0       	rjmp	.+102    	; 0x72 <__bad_interrupt>
   c:	32 c0       	rjmp	.+100    	; 0x72 <__bad_interrupt>
   e:	31 c0       	rjmp	.+98     	; 0x72 <__bad_interrupt>
  10:	20 c1       	rjmp	.+576    	; 0x252 <__vector_8>
  12:	2f c0       	rjmp	.+94     	; 0x72 <__bad_interrupt>
  14:	2e c0       	rjmp	.+92     	; 0x72 <__bad_interrupt>
  16:	2d c0       	rjmp	.+90     	; 0x72 <__bad_interrupt>
  18:	2c c0       	rjmp	.+88     	; 0x72 <__bad_interrupt>
  1a:	2b c0       	rjmp	.+86     	; 0x72 <__bad_interrupt>
  1c:	2a c0       	rjmp	.+84     	; 0x72 <__bad_interrupt>
  1e:	29 c0       	rjmp	.+82     	; 0x72 <__bad_interrupt>
  20:	28 c0       	rjmp	.+80     	; 0x72 <__bad_interrupt>
  22:	27 c0       	rjmp	.+78     	; 0x72 <__bad_interrupt>
  24:	26 c0       	rjmp	.+76     	; 0x72 <__bad_interrupt>
  26:	25 c0       	rjmp	.+74     	; 0x72 <__bad_interrupt>
  28:	24 c0       	rjmp	.+72     	; 0x72 <__bad_interrupt>
  2a:	23 c0       	rjmp	.+70     	; 0x72 <__bad_interrupt>
  2c:	22 c0       	rjmp	.+68     	; 0x72 <__bad_interrupt>
  2e:	21 c0       	rjmp	.+66     	; 0x72 <__bad_interrupt>
  30:	20 c0       	rjmp	.+64     	; 0x72 <__bad_interrupt>
  32:	1f c0       	rjmp	.+62     	; 0x72 <__bad_interrupt>
  34:	1e c0       	rjmp	.+60     	; 0x72 <__bad_interrupt>
  36:	1d c0       	rjmp	.+58     	; 0x72 <__bad_interrupt>
  38:	1c c0       	rjmp	.+56     	; 0x72 <__bad_interrupt>
  3a:	1b c0       	rjmp	.+54     	; 0x72 <__bad_interrupt>

0000003c <__ctors_end>:
  3c:	11 24       	eor	r1, r1
  3e:	1f be       	out	0x3f, r1	; 63
  40:	cf ef       	ldi	r28, 0xFF	; 255
  42:	d2 e0       	ldi	r29, 0x02	; 2
  44:	de bf       	out	0x3e, r29	; 62
  46:	cd bf       	out	0x3d, r28	; 61

00000048 <__do_copy_data>:
  48:	11 e0       	ldi	r17, 0x01	; 1
  4a:	a0 e0       	ldi	r26, 0x00	; 0
  4c:	b1 e0       	ldi	r27, 0x01	; 1
  4e:	e4 e2       	ldi	r30, 0x24	; 36
  50:	f7 e0       	ldi	r31, 0x07	; 7
  52:	02 c0       	rjmp	.+4      	; 0x58 <__do_copy_data+0x10>
  54:	05 90       	lpm	r0, Z+
  56:	0d 92       	st	X+, r0
  58:	a8 30       	cpi	r26, 0x08	; 8
  5a:	b1 07       	cpc	r27, r17
  5c:	d9 f7       	brne	.-10     	; 0x54 <__do_copy_data+0xc>

0000005e <__do_clear_bss>:
  5e:	21 e0       	ldi	r18, 0x01	; 1
  60:	a8 e0       	ldi	r26, 0x08	; 8
  62:	b1 e0       	ldi	r27, 0x01	; 1
  64:	01 c0       	rjmp	.+2      	; 0x68 <.do_clear_bss_start>

00000066 <.do_clear_bss_loop>:
  66:	1d 92       	st	X+, r1

00000068 <.do_clear_bss_start>:
  68:	aa 31       	cpi	r26, 0x1A	; 26
  6a:	b2 07       	cpc	r27, r18
  6c:	e1 f7       	brne	.-8      	; 0x66 <.do_clear_bss_loop>
  6e:	02 d0       	rcall	.+4      	; 0x74 <main>
  70:	57 c3       	rjmp	.+1710   	; 0x720 <_exit>

00000072 <__bad_interrupt>:
  72:	c6 cf       	rjmp	.-116    	; 0x0 <__vectors>

00000074 <main>:

int main(void)
{
	
	//Set up pins
    DDRA |= (1 << DDA1) | (1 << DDA3); //set PA1 and PA3 as output (to drive the switches) 
  74:	8a b3       	in	r24, 0x1a	; 26
  76:	8a 60       	ori	r24, 0x0A	; 10
  78:	8a bb       	out	0x1a, r24	; 26
	
	DDRA &= ~(1 << DDA7); //set PA2 as input (for hall-effect sensor) 
  7a:	d7 98       	cbi	0x1a, 7	; 26
	//timer for PWM
	TCCR0B |= (1<< CS00); // clkI/O/(No prescaling)
  7c:	83 b7       	in	r24, 0x33	; 51
  7e:	81 60       	ori	r24, 0x01	; 1
  80:	83 bf       	out	0x33, r24	; 51
	//timer for measuring rpm from hall sensor
	TCCR1B |= (1<< CS10);
  82:	8e b5       	in	r24, 0x2e	; 46
  84:	81 60       	ori	r24, 0x01	; 1
  86:	8e bd       	out	0x2e, r24	; 46
	//start at zero
	TCNT1 = 0;
  88:	1d bc       	out	0x2d, r1	; 45
  8a:	1c bc       	out	0x2c, r1	; 44
	//set timer1 to start counting
	TCCR1A = 0;
  8c:	1f bc       	out	0x2f, r1	; 47
	//TCCR1B = 0;


	
	// turn on Fast PWM Mode
	TCCR0A |= ((1<< WGM01) | (1<< WGM00));
  8e:	80 b7       	in	r24, 0x30	; 48
  90:	83 60       	ori	r24, 0x03	; 3
  92:	80 bf       	out	0x30, r24	; 48
	TCCR0B |= (1<< WGM02);
  94:	83 b7       	in	r24, 0x33	; 51
  96:	88 60       	ori	r24, 0x08	; 8
  98:	83 bf       	out	0x33, r24	; 51

	// Set Values for Duty Cycle and Frequency
	uint8_t TOP = 250;
	
	OCR0A = TOP;
  9a:	8a ef       	ldi	r24, 0xFA	; 250
  9c:	86 bf       	out	0x36, r24	; 54
	OCR0B = TOP*duty;
  9e:	20 e0       	ldi	r18, 0x00	; 0
  a0:	30 e0       	ldi	r19, 0x00	; 0
  a2:	4a e7       	ldi	r20, 0x7A	; 122
  a4:	53 e4       	ldi	r21, 0x43	; 67
  a6:	60 91 00 01 	lds	r22, 0x0100
  aa:	70 91 01 01 	lds	r23, 0x0101
  ae:	80 91 02 01 	lds	r24, 0x0102
  b2:	90 91 03 01 	lds	r25, 0x0103
  b6:	c9 d2       	rcall	.+1426   	; 0x64a <__mulsf3>
  b8:	23 d2       	rcall	.+1094   	; 0x500 <__fixunssfsi>
  ba:	6c bf       	out	0x3c, r22	; 60

	TOCPMSA0 &= ~((1<< TOCC0S0) | (1<< TOCC0S1)); //routes the output of OC0B to TOCC0 (which corresponds PA1)
  bc:	e7 e6       	ldi	r30, 0x67	; 103
  be:	f0 e0       	ldi	r31, 0x00	; 0
  c0:	80 81       	ld	r24, Z
  c2:	8c 7f       	andi	r24, 0xFC	; 252
  c4:	80 83       	st	Z, r24

	//routes the output of OC0B to TOCC2 (which corresponds PA3)
	TOCPMSA0 &= ~((1<< TOCC2S0) | (1<< TOCC2S1));
  c6:	80 81       	ld	r24, Z
  c8:	8f 7c       	andi	r24, 0xCF	; 207
  ca:	80 83       	st	Z, r24

	// Clear OC0B when Compare Match
	TCCR0A |= (1<< COM0B1);
  cc:	80 b7       	in	r24, 0x30	; 48
  ce:	80 62       	ori	r24, 0x20	; 32
  d0:	80 bf       	out	0x30, r24	; 48
	//Enable output to respective pins

	if (PINA == (1<<PORTA7)){
  d2:	89 b3       	in	r24, 0x19	; 25
  d4:	80 38       	cpi	r24, 0x80	; 128
  d6:	31 f4       	brne	.+12     	; 0xe4 <main+0x70>
		TOCPMCOE |= (1<< TOCC0OE); //works with 1
  d8:	e6 e6       	ldi	r30, 0x66	; 102
  da:	f0 e0       	ldi	r31, 0x00	; 0
  dc:	80 81       	ld	r24, Z
  de:	81 60       	ori	r24, 0x01	; 1
  e0:	80 83       	st	Z, r24
  e2:	05 c0       	rjmp	.+10     	; 0xee <main+0x7a>
	} else {
		TOCPMCOE |= (1<< TOCC2OE); //works with 0
  e4:	e6 e6       	ldi	r30, 0x66	; 102
  e6:	f0 e0       	ldi	r31, 0x00	; 0
  e8:	80 81       	ld	r24, Z
  ea:	84 60       	ori	r24, 0x04	; 4
  ec:	80 83       	st	Z, r24
	}

	
	
	//set up interrupt for PWM switching (Timer 0)
	cli();
  ee:	f8 94       	cli
	//enable pin change interrupt for PCINT7
	PCMSK0 |= (1<< PCINT7);
  f0:	97 9a       	sbi	0x12, 7	; 18
	//Any logical change causes interrupt
	MCUCR |= (1<< ISC00);
  f2:	85 b7       	in	r24, 0x35	; 53
  f4:	81 60       	ori	r24, 0x01	; 1
  f6:	85 bf       	out	0x35, r24	; 53
	//Enable pin change interrupt 0 
	GIMSK |= (1<< PCIE0);
  f8:	8b b7       	in	r24, 0x3b	; 59
  fa:	80 61       	ori	r24, 0x10	; 16
  fc:	8b bf       	out	0x3b, r24	; 59
	//set up overflow interrupt for fan speed measuring (TIMER 1)
	TIMSK1 = (1 << TOIE1) ;
  fe:	81 e0       	ldi	r24, 0x01	; 1
 100:	8f b9       	out	0x0f, r24	; 15
	//enable TOV flag for interrupt
	//TIFR1 |= (1<<TOV1);
	TCCR1A = 0;
 102:	1f bc       	out	0x2f, r1	; 47
	TCCR1B = 0;;
 104:	1e bc       	out	0x2e, r1	; 46

	TCNT1 = 65380;
 106:	84 e6       	ldi	r24, 0x64	; 100
 108:	9f ef       	ldi	r25, 0xFF	; 255
 10a:	9d bd       	out	0x2d, r25	; 45
 10c:	8c bd       	out	0x2c, r24	; 44
	
	//enable global interrupts
	sei();
 10e:	78 94       	sei

	
    while (1) 
    {
		//change duty cycle of fan to adjust to appropriate speed
		if ((actualRPM > requestedRPM)){
 110:	c0 90 08 01 	lds	r12, 0x0108
 114:	d0 90 09 01 	lds	r13, 0x0109
 118:	e0 90 0a 01 	lds	r14, 0x010A
 11c:	f0 90 0b 01 	lds	r15, 0x010B
 120:	80 90 04 01 	lds	r8, 0x0104
 124:	90 90 05 01 	lds	r9, 0x0105
 128:	a0 90 06 01 	lds	r10, 0x0106
 12c:	b0 90 07 01 	lds	r11, 0x0107
 130:	a5 01       	movw	r20, r10
 132:	94 01       	movw	r18, r8
 134:	c7 01       	movw	r24, r14
 136:	b6 01       	movw	r22, r12
 138:	84 d2       	rcall	.+1288   	; 0x642 <__gesf2>
 13a:	18 16       	cp	r1, r24
 13c:	44 f5       	brge	.+80     	; 0x18e <main+0x11a>
			if(duty>=0.432){
 13e:	c0 90 00 01 	lds	r12, 0x0100
 142:	d0 90 01 01 	lds	r13, 0x0101
 146:	e0 90 02 01 	lds	r14, 0x0102
 14a:	f0 90 03 01 	lds	r15, 0x0103
 14e:	2b e1       	ldi	r18, 0x1B	; 27
 150:	3f e2       	ldi	r19, 0x2F	; 47
 152:	4d ed       	ldi	r20, 0xDD	; 221
 154:	5e e3       	ldi	r21, 0x3E	; 62
 156:	c7 01       	movw	r24, r14
 158:	b6 01       	movw	r22, r12
 15a:	73 d2       	rcall	.+1254   	; 0x642 <__gesf2>
 15c:	88 23       	and	r24, r24
 15e:	c4 f2       	brlt	.-80     	; 0x110 <main+0x9c>
				duty -= 0.00001;
 160:	2c ea       	ldi	r18, 0xAC	; 172
 162:	35 ec       	ldi	r19, 0xC5	; 197
 164:	47 e2       	ldi	r20, 0x27	; 39
 166:	57 e3       	ldi	r21, 0x37	; 55
 168:	c7 01       	movw	r24, r14
 16a:	b6 01       	movw	r22, r12
 16c:	f8 d0       	rcall	.+496    	; 0x35e <__subsf3>
 16e:	60 93 00 01 	sts	0x0100, r22
 172:	70 93 01 01 	sts	0x0101, r23
 176:	80 93 02 01 	sts	0x0102, r24
 17a:	90 93 03 01 	sts	0x0103, r25
				OCR0B = TOP*duty;
 17e:	20 e0       	ldi	r18, 0x00	; 0
 180:	30 e0       	ldi	r19, 0x00	; 0
 182:	4a e7       	ldi	r20, 0x7A	; 122
 184:	53 e4       	ldi	r21, 0x43	; 67
 186:	61 d2       	rcall	.+1218   	; 0x64a <__mulsf3>
 188:	bb d1       	rcall	.+886    	; 0x500 <__fixunssfsi>
 18a:	6c bf       	out	0x3c, r22	; 60
 18c:	c1 cf       	rjmp	.-126    	; 0x110 <main+0x9c>
			}
		}
		else if (actualRPM < requestedRPM) {
 18e:	a5 01       	movw	r20, r10
 190:	94 01       	movw	r18, r8
 192:	c7 01       	movw	r24, r14
 194:	b6 01       	movw	r22, r12
 196:	48 d1       	rcall	.+656    	; 0x428 <__cmpsf2>
 198:	88 23       	and	r24, r24
 19a:	0c f0       	brlt	.+2      	; 0x19e <main+0x12a>
 19c:	b9 cf       	rjmp	.-142    	; 0x110 <main+0x9c>
			if(duty<=1){
 19e:	c0 90 00 01 	lds	r12, 0x0100
 1a2:	d0 90 01 01 	lds	r13, 0x0101
 1a6:	e0 90 02 01 	lds	r14, 0x0102
 1aa:	f0 90 03 01 	lds	r15, 0x0103
 1ae:	20 e0       	ldi	r18, 0x00	; 0
 1b0:	30 e0       	ldi	r19, 0x00	; 0
 1b2:	40 e8       	ldi	r20, 0x80	; 128
 1b4:	5f e3       	ldi	r21, 0x3F	; 63
 1b6:	c7 01       	movw	r24, r14
 1b8:	b6 01       	movw	r22, r12
 1ba:	36 d1       	rcall	.+620    	; 0x428 <__cmpsf2>
 1bc:	18 16       	cp	r1, r24
 1be:	0c f4       	brge	.+2      	; 0x1c2 <main+0x14e>
 1c0:	a7 cf       	rjmp	.-178    	; 0x110 <main+0x9c>
				duty += 0.00001;
 1c2:	2c ea       	ldi	r18, 0xAC	; 172
 1c4:	35 ec       	ldi	r19, 0xC5	; 197
 1c6:	47 e2       	ldi	r20, 0x27	; 39
 1c8:	57 e3       	ldi	r21, 0x37	; 55
 1ca:	c7 01       	movw	r24, r14
 1cc:	b6 01       	movw	r22, r12
 1ce:	c8 d0       	rcall	.+400    	; 0x360 <__addsf3>
 1d0:	60 93 00 01 	sts	0x0100, r22
 1d4:	70 93 01 01 	sts	0x0101, r23
 1d8:	80 93 02 01 	sts	0x0102, r24
 1dc:	90 93 03 01 	sts	0x0103, r25
				OCR0B = TOP*duty;
 1e0:	20 e0       	ldi	r18, 0x00	; 0
 1e2:	30 e0       	ldi	r19, 0x00	; 0
 1e4:	4a e7       	ldi	r20, 0x7A	; 122
 1e6:	53 e4       	ldi	r21, 0x43	; 67
 1e8:	30 d2       	rcall	.+1120   	; 0x64a <__mulsf3>
 1ea:	8a d1       	rcall	.+788    	; 0x500 <__fixunssfsi>
 1ec:	6c bf       	out	0x3c, r22	; 60
 1ee:	90 cf       	rjmp	.-224    	; 0x110 <main+0x9c>

000001f0 <measureRPM>:
}

float measureRPM() {
	//use clock frequency to get actual value of initialRPM
	
	finalRPM = ((1/interimPeriod)*60);
 1f0:	20 91 12 01 	lds	r18, 0x0112
 1f4:	30 91 13 01 	lds	r19, 0x0113
 1f8:	40 91 14 01 	lds	r20, 0x0114
 1fc:	50 91 15 01 	lds	r21, 0x0115
 200:	60 e0       	ldi	r22, 0x00	; 0
 202:	70 e0       	ldi	r23, 0x00	; 0
 204:	80 e8       	ldi	r24, 0x80	; 128
 206:	9f e3       	ldi	r25, 0x3F	; 63
 208:	13 d1       	rcall	.+550    	; 0x430 <__divsf3>
 20a:	20 e0       	ldi	r18, 0x00	; 0
 20c:	30 e0       	ldi	r19, 0x00	; 0
 20e:	40 e7       	ldi	r20, 0x70	; 112
 210:	52 e4       	ldi	r21, 0x42	; 66
 212:	1b d2       	rcall	.+1078   	; 0x64a <__mulsf3>
 214:	60 93 16 01 	sts	0x0116, r22
 218:	70 93 17 01 	sts	0x0117, r23
 21c:	80 93 18 01 	sts	0x0118, r24
 220:	90 93 19 01 	sts	0x0119, r25
	interimPeriod = 0;
 224:	10 92 12 01 	sts	0x0112, r1
 228:	10 92 13 01 	sts	0x0113, r1
 22c:	10 92 14 01 	sts	0x0114, r1
 230:	10 92 15 01 	sts	0x0115, r1
	interimValue = 0;
 234:	10 92 11 01 	sts	0x0111, r1
 238:	10 92 10 01 	sts	0x0110, r1
	TCNT1 = 0;
 23c:	1d bc       	out	0x2d, r1	; 45
 23e:	1c bc       	out	0x2c, r1	; 44
	return finalRPM; //Actual RPM
 240:	60 91 16 01 	lds	r22, 0x0116
 244:	70 91 17 01 	lds	r23, 0x0117
 248:	80 91 18 01 	lds	r24, 0x0118
 24c:	90 91 19 01 	lds	r25, 0x0119
}
 250:	08 95       	ret

00000252 <__vector_8>:
/*int lockedRotor() {
	//clear register to disable PWM output
	TOCPMCOE &= ~(1<<TOCC0OE) | (1<<TOCC2OE);
}*/

ISR(TIMER1_OVF_vect) {
 252:	1f 92       	push	r1
 254:	0f 92       	push	r0
 256:	0f b6       	in	r0, 0x3f	; 63
 258:	0f 92       	push	r0
 25a:	11 24       	eor	r1, r1
 25c:	8f 93       	push	r24
 25e:	9f 93       	push	r25
 260:	af 93       	push	r26
 262:	bf 93       	push	r27
	//keep track of overflows
	noOfOverflows++;
 264:	80 91 0c 01 	lds	r24, 0x010C
 268:	90 91 0d 01 	lds	r25, 0x010D
 26c:	a0 91 0e 01 	lds	r26, 0x010E
 270:	b0 91 0f 01 	lds	r27, 0x010F
 274:	01 96       	adiw	r24, 0x01	; 1
 276:	a1 1d       	adc	r26, r1
 278:	b1 1d       	adc	r27, r1
 27a:	80 93 0c 01 	sts	0x010C, r24
 27e:	90 93 0d 01 	sts	0x010D, r25
 282:	a0 93 0e 01 	sts	0x010E, r26
 286:	b0 93 0f 01 	sts	0x010F, r27
}
 28a:	bf 91       	pop	r27
 28c:	af 91       	pop	r26
 28e:	9f 91       	pop	r25
 290:	8f 91       	pop	r24
 292:	0f 90       	pop	r0
 294:	0f be       	out	0x3f, r0	; 63
 296:	0f 90       	pop	r0
 298:	1f 90       	pop	r1
 29a:	18 95       	reti

0000029c <__vector_2>:

ISR(PCINT0_vect) {
 29c:	1f 92       	push	r1
 29e:	0f 92       	push	r0
 2a0:	0f b6       	in	r0, 0x3f	; 63
 2a2:	0f 92       	push	r0
 2a4:	11 24       	eor	r1, r1
 2a6:	2f 93       	push	r18
 2a8:	3f 93       	push	r19
 2aa:	4f 93       	push	r20
 2ac:	5f 93       	push	r21
 2ae:	6f 93       	push	r22
 2b0:	7f 93       	push	r23
 2b2:	8f 93       	push	r24
 2b4:	9f 93       	push	r25
 2b6:	af 93       	push	r26
 2b8:	bf 93       	push	r27
 2ba:	cf 93       	push	r28
 2bc:	df 93       	push	r29
 2be:	ef 93       	push	r30
 2c0:	ff 93       	push	r31
	//toggle output pins (PA3 and PA1) to output 1 PWM at a time
	TOCPMCOE ^= (1<<TOCC0OE) | (1<<TOCC2OE);
 2c2:	e6 e6       	ldi	r30, 0x66	; 102
 2c4:	f0 e0       	ldi	r31, 0x00	; 0
 2c6:	90 81       	ld	r25, Z
 2c8:	85 e0       	ldi	r24, 0x05	; 5
 2ca:	89 27       	eor	r24, r25
 2cc:	80 83       	st	Z, r24
	
	interimValue++;
 2ce:	c0 91 10 01 	lds	r28, 0x0110
 2d2:	d0 91 11 01 	lds	r29, 0x0111
 2d6:	21 96       	adiw	r28, 0x01	; 1
 2d8:	d0 93 11 01 	sts	0x0111, r29
 2dc:	c0 93 10 01 	sts	0x0110, r28
	interimPeriod += (1/(F_CPU))*(noOfOverflows + 65536/(TCNT1));
 2e0:	8c b5       	in	r24, 0x2c	; 44
 2e2:	9d b5       	in	r25, 0x2d	; 45
 2e4:	20 e0       	ldi	r18, 0x00	; 0
 2e6:	30 e0       	ldi	r19, 0x00	; 0
 2e8:	a9 01       	movw	r20, r18
 2ea:	60 91 12 01 	lds	r22, 0x0112
 2ee:	70 91 13 01 	lds	r23, 0x0113
 2f2:	80 91 14 01 	lds	r24, 0x0114
 2f6:	90 91 15 01 	lds	r25, 0x0115
 2fa:	32 d0       	rcall	.+100    	; 0x360 <__addsf3>
 2fc:	60 93 12 01 	sts	0x0112, r22
 300:	70 93 13 01 	sts	0x0113, r23
 304:	80 93 14 01 	sts	0x0114, r24
 308:	90 93 15 01 	sts	0x0115, r25
	
	if (interimValue == 4) {
 30c:	24 97       	sbiw	r28, 0x04	; 4
 30e:	49 f4       	brne	.+18     	; 0x322 <__stack+0x23>
	 actualRPM = measureRPM();
 310:	6f df       	rcall	.-290    	; 0x1f0 <measureRPM>
 312:	60 93 08 01 	sts	0x0108, r22
 316:	70 93 09 01 	sts	0x0109, r23
 31a:	80 93 0a 01 	sts	0x010A, r24
 31e:	90 93 0b 01 	sts	0x010B, r25
	}

	//reset TIMER1 
	TCNT1 = 0;
 322:	1d bc       	out	0x2d, r1	; 45
 324:	1c bc       	out	0x2c, r1	; 44
	//reset overflows
	noOfOverflows = 0;
 326:	10 92 0c 01 	sts	0x010C, r1
 32a:	10 92 0d 01 	sts	0x010D, r1
 32e:	10 92 0e 01 	sts	0x010E, r1
 332:	10 92 0f 01 	sts	0x010F, r1
	//intialise TIMER1 to start counting
	TCCR1A = 0;
 336:	1f bc       	out	0x2f, r1	; 47
}
 338:	ff 91       	pop	r31
 33a:	ef 91       	pop	r30
 33c:	df 91       	pop	r29
 33e:	cf 91       	pop	r28
 340:	bf 91       	pop	r27
 342:	af 91       	pop	r26
 344:	9f 91       	pop	r25
 346:	8f 91       	pop	r24
 348:	7f 91       	pop	r23
 34a:	6f 91       	pop	r22
 34c:	5f 91       	pop	r21
 34e:	4f 91       	pop	r20
 350:	3f 91       	pop	r19
 352:	2f 91       	pop	r18
 354:	0f 90       	pop	r0
 356:	0f be       	out	0x3f, r0	; 63
 358:	0f 90       	pop	r0
 35a:	1f 90       	pop	r1
 35c:	18 95       	reti

0000035e <__subsf3>:
 35e:	50 58       	subi	r21, 0x80	; 128

00000360 <__addsf3>:
 360:	bb 27       	eor	r27, r27
 362:	aa 27       	eor	r26, r26
 364:	0e d0       	rcall	.+28     	; 0x382 <__addsf3x>
 366:	33 c1       	rjmp	.+614    	; 0x5ce <__fp_round>
 368:	24 d1       	rcall	.+584    	; 0x5b2 <__fp_pscA>
 36a:	30 f0       	brcs	.+12     	; 0x378 <__addsf3+0x18>
 36c:	29 d1       	rcall	.+594    	; 0x5c0 <__fp_pscB>
 36e:	20 f0       	brcs	.+8      	; 0x378 <__addsf3+0x18>
 370:	31 f4       	brne	.+12     	; 0x37e <__addsf3+0x1e>
 372:	9f 3f       	cpi	r25, 0xFF	; 255
 374:	11 f4       	brne	.+4      	; 0x37a <__addsf3+0x1a>
 376:	1e f4       	brtc	.+6      	; 0x37e <__addsf3+0x1e>
 378:	19 c1       	rjmp	.+562    	; 0x5ac <__fp_nan>
 37a:	0e f4       	brtc	.+2      	; 0x37e <__addsf3+0x1e>
 37c:	e0 95       	com	r30
 37e:	e7 fb       	bst	r30, 7
 380:	0f c1       	rjmp	.+542    	; 0x5a0 <__fp_inf>

00000382 <__addsf3x>:
 382:	e9 2f       	mov	r30, r25
 384:	35 d1       	rcall	.+618    	; 0x5f0 <__fp_split3>
 386:	80 f3       	brcs	.-32     	; 0x368 <__addsf3+0x8>
 388:	ba 17       	cp	r27, r26
 38a:	62 07       	cpc	r22, r18
 38c:	73 07       	cpc	r23, r19
 38e:	84 07       	cpc	r24, r20
 390:	95 07       	cpc	r25, r21
 392:	18 f0       	brcs	.+6      	; 0x39a <__addsf3x+0x18>
 394:	71 f4       	brne	.+28     	; 0x3b2 <__addsf3x+0x30>
 396:	9e f5       	brtc	.+102    	; 0x3fe <__addsf3x+0x7c>
 398:	4d c1       	rjmp	.+666    	; 0x634 <__fp_zero>
 39a:	0e f4       	brtc	.+2      	; 0x39e <__addsf3x+0x1c>
 39c:	e0 95       	com	r30
 39e:	0b 2e       	mov	r0, r27
 3a0:	ba 2f       	mov	r27, r26
 3a2:	a0 2d       	mov	r26, r0
 3a4:	0b 01       	movw	r0, r22
 3a6:	b9 01       	movw	r22, r18
 3a8:	90 01       	movw	r18, r0
 3aa:	0c 01       	movw	r0, r24
 3ac:	ca 01       	movw	r24, r20
 3ae:	a0 01       	movw	r20, r0
 3b0:	11 24       	eor	r1, r1
 3b2:	ff 27       	eor	r31, r31
 3b4:	59 1b       	sub	r21, r25
 3b6:	99 f0       	breq	.+38     	; 0x3de <__addsf3x+0x5c>
 3b8:	59 3f       	cpi	r21, 0xF9	; 249
 3ba:	50 f4       	brcc	.+20     	; 0x3d0 <__addsf3x+0x4e>
 3bc:	50 3e       	cpi	r21, 0xE0	; 224
 3be:	68 f1       	brcs	.+90     	; 0x41a <__addsf3x+0x98>
 3c0:	1a 16       	cp	r1, r26
 3c2:	f0 40       	sbci	r31, 0x00	; 0
 3c4:	a2 2f       	mov	r26, r18
 3c6:	23 2f       	mov	r18, r19
 3c8:	34 2f       	mov	r19, r20
 3ca:	44 27       	eor	r20, r20
 3cc:	58 5f       	subi	r21, 0xF8	; 248
 3ce:	f3 cf       	rjmp	.-26     	; 0x3b6 <__addsf3x+0x34>
 3d0:	46 95       	lsr	r20
 3d2:	37 95       	ror	r19
 3d4:	27 95       	ror	r18
 3d6:	a7 95       	ror	r26
 3d8:	f0 40       	sbci	r31, 0x00	; 0
 3da:	53 95       	inc	r21
 3dc:	c9 f7       	brne	.-14     	; 0x3d0 <__addsf3x+0x4e>
 3de:	7e f4       	brtc	.+30     	; 0x3fe <__addsf3x+0x7c>
 3e0:	1f 16       	cp	r1, r31
 3e2:	ba 0b       	sbc	r27, r26
 3e4:	62 0b       	sbc	r22, r18
 3e6:	73 0b       	sbc	r23, r19
 3e8:	84 0b       	sbc	r24, r20
 3ea:	ba f0       	brmi	.+46     	; 0x41a <__addsf3x+0x98>
 3ec:	91 50       	subi	r25, 0x01	; 1
 3ee:	a1 f0       	breq	.+40     	; 0x418 <__addsf3x+0x96>
 3f0:	ff 0f       	add	r31, r31
 3f2:	bb 1f       	adc	r27, r27
 3f4:	66 1f       	adc	r22, r22
 3f6:	77 1f       	adc	r23, r23
 3f8:	88 1f       	adc	r24, r24
 3fa:	c2 f7       	brpl	.-16     	; 0x3ec <__addsf3x+0x6a>
 3fc:	0e c0       	rjmp	.+28     	; 0x41a <__addsf3x+0x98>
 3fe:	ba 0f       	add	r27, r26
 400:	62 1f       	adc	r22, r18
 402:	73 1f       	adc	r23, r19
 404:	84 1f       	adc	r24, r20
 406:	48 f4       	brcc	.+18     	; 0x41a <__addsf3x+0x98>
 408:	87 95       	ror	r24
 40a:	77 95       	ror	r23
 40c:	67 95       	ror	r22
 40e:	b7 95       	ror	r27
 410:	f7 95       	ror	r31
 412:	9e 3f       	cpi	r25, 0xFE	; 254
 414:	08 f0       	brcs	.+2      	; 0x418 <__addsf3x+0x96>
 416:	b3 cf       	rjmp	.-154    	; 0x37e <__addsf3+0x1e>
 418:	93 95       	inc	r25
 41a:	88 0f       	add	r24, r24
 41c:	08 f0       	brcs	.+2      	; 0x420 <__addsf3x+0x9e>
 41e:	99 27       	eor	r25, r25
 420:	ee 0f       	add	r30, r30
 422:	97 95       	ror	r25
 424:	87 95       	ror	r24
 426:	08 95       	ret

00000428 <__cmpsf2>:
 428:	97 d0       	rcall	.+302    	; 0x558 <__fp_cmp>
 42a:	08 f4       	brcc	.+2      	; 0x42e <__cmpsf2+0x6>
 42c:	81 e0       	ldi	r24, 0x01	; 1
 42e:	08 95       	ret

00000430 <__divsf3>:
 430:	0c d0       	rcall	.+24     	; 0x44a <__divsf3x>
 432:	cd c0       	rjmp	.+410    	; 0x5ce <__fp_round>
 434:	c5 d0       	rcall	.+394    	; 0x5c0 <__fp_pscB>
 436:	40 f0       	brcs	.+16     	; 0x448 <__divsf3+0x18>
 438:	bc d0       	rcall	.+376    	; 0x5b2 <__fp_pscA>
 43a:	30 f0       	brcs	.+12     	; 0x448 <__divsf3+0x18>
 43c:	21 f4       	brne	.+8      	; 0x446 <__divsf3+0x16>
 43e:	5f 3f       	cpi	r21, 0xFF	; 255
 440:	19 f0       	breq	.+6      	; 0x448 <__divsf3+0x18>
 442:	ae c0       	rjmp	.+348    	; 0x5a0 <__fp_inf>
 444:	51 11       	cpse	r21, r1
 446:	f7 c0       	rjmp	.+494    	; 0x636 <__fp_szero>
 448:	b1 c0       	rjmp	.+354    	; 0x5ac <__fp_nan>

0000044a <__divsf3x>:
 44a:	d2 d0       	rcall	.+420    	; 0x5f0 <__fp_split3>
 44c:	98 f3       	brcs	.-26     	; 0x434 <__divsf3+0x4>

0000044e <__divsf3_pse>:
 44e:	99 23       	and	r25, r25
 450:	c9 f3       	breq	.-14     	; 0x444 <__divsf3+0x14>
 452:	55 23       	and	r21, r21
 454:	b1 f3       	breq	.-20     	; 0x442 <__divsf3+0x12>
 456:	95 1b       	sub	r25, r21
 458:	55 0b       	sbc	r21, r21
 45a:	bb 27       	eor	r27, r27
 45c:	aa 27       	eor	r26, r26
 45e:	62 17       	cp	r22, r18
 460:	73 07       	cpc	r23, r19
 462:	84 07       	cpc	r24, r20
 464:	38 f0       	brcs	.+14     	; 0x474 <__divsf3_pse+0x26>
 466:	9f 5f       	subi	r25, 0xFF	; 255
 468:	5f 4f       	sbci	r21, 0xFF	; 255
 46a:	22 0f       	add	r18, r18
 46c:	33 1f       	adc	r19, r19
 46e:	44 1f       	adc	r20, r20
 470:	aa 1f       	adc	r26, r26
 472:	a9 f3       	breq	.-22     	; 0x45e <__divsf3_pse+0x10>
 474:	33 d0       	rcall	.+102    	; 0x4dc <__divsf3_pse+0x8e>
 476:	0e 2e       	mov	r0, r30
 478:	3a f0       	brmi	.+14     	; 0x488 <__divsf3_pse+0x3a>
 47a:	e0 e8       	ldi	r30, 0x80	; 128
 47c:	30 d0       	rcall	.+96     	; 0x4de <__divsf3_pse+0x90>
 47e:	91 50       	subi	r25, 0x01	; 1
 480:	50 40       	sbci	r21, 0x00	; 0
 482:	e6 95       	lsr	r30
 484:	00 1c       	adc	r0, r0
 486:	ca f7       	brpl	.-14     	; 0x47a <__divsf3_pse+0x2c>
 488:	29 d0       	rcall	.+82     	; 0x4dc <__divsf3_pse+0x8e>
 48a:	fe 2f       	mov	r31, r30
 48c:	27 d0       	rcall	.+78     	; 0x4dc <__divsf3_pse+0x8e>
 48e:	66 0f       	add	r22, r22
 490:	77 1f       	adc	r23, r23
 492:	88 1f       	adc	r24, r24
 494:	bb 1f       	adc	r27, r27
 496:	26 17       	cp	r18, r22
 498:	37 07       	cpc	r19, r23
 49a:	48 07       	cpc	r20, r24
 49c:	ab 07       	cpc	r26, r27
 49e:	b0 e8       	ldi	r27, 0x80	; 128
 4a0:	09 f0       	breq	.+2      	; 0x4a4 <__divsf3_pse+0x56>
 4a2:	bb 0b       	sbc	r27, r27
 4a4:	80 2d       	mov	r24, r0
 4a6:	bf 01       	movw	r22, r30
 4a8:	ff 27       	eor	r31, r31
 4aa:	93 58       	subi	r25, 0x83	; 131
 4ac:	5f 4f       	sbci	r21, 0xFF	; 255
 4ae:	2a f0       	brmi	.+10     	; 0x4ba <__divsf3_pse+0x6c>
 4b0:	9e 3f       	cpi	r25, 0xFE	; 254
 4b2:	51 05       	cpc	r21, r1
 4b4:	68 f0       	brcs	.+26     	; 0x4d0 <__divsf3_pse+0x82>
 4b6:	74 c0       	rjmp	.+232    	; 0x5a0 <__fp_inf>
 4b8:	be c0       	rjmp	.+380    	; 0x636 <__fp_szero>
 4ba:	5f 3f       	cpi	r21, 0xFF	; 255
 4bc:	ec f3       	brlt	.-6      	; 0x4b8 <__divsf3_pse+0x6a>
 4be:	98 3e       	cpi	r25, 0xE8	; 232
 4c0:	dc f3       	brlt	.-10     	; 0x4b8 <__divsf3_pse+0x6a>
 4c2:	86 95       	lsr	r24
 4c4:	77 95       	ror	r23
 4c6:	67 95       	ror	r22
 4c8:	b7 95       	ror	r27
 4ca:	f7 95       	ror	r31
 4cc:	9f 5f       	subi	r25, 0xFF	; 255
 4ce:	c9 f7       	brne	.-14     	; 0x4c2 <__divsf3_pse+0x74>
 4d0:	88 0f       	add	r24, r24
 4d2:	91 1d       	adc	r25, r1
 4d4:	96 95       	lsr	r25
 4d6:	87 95       	ror	r24
 4d8:	97 f9       	bld	r25, 7
 4da:	08 95       	ret
 4dc:	e1 e0       	ldi	r30, 0x01	; 1
 4de:	66 0f       	add	r22, r22
 4e0:	77 1f       	adc	r23, r23
 4e2:	88 1f       	adc	r24, r24
 4e4:	bb 1f       	adc	r27, r27
 4e6:	62 17       	cp	r22, r18
 4e8:	73 07       	cpc	r23, r19
 4ea:	84 07       	cpc	r24, r20
 4ec:	ba 07       	cpc	r27, r26
 4ee:	20 f0       	brcs	.+8      	; 0x4f8 <__divsf3_pse+0xaa>
 4f0:	62 1b       	sub	r22, r18
 4f2:	73 0b       	sbc	r23, r19
 4f4:	84 0b       	sbc	r24, r20
 4f6:	ba 0b       	sbc	r27, r26
 4f8:	ee 1f       	adc	r30, r30
 4fa:	88 f7       	brcc	.-30     	; 0x4de <__divsf3_pse+0x90>
 4fc:	e0 95       	com	r30
 4fe:	08 95       	ret

00000500 <__fixunssfsi>:
 500:	7f d0       	rcall	.+254    	; 0x600 <__fp_splitA>
 502:	88 f0       	brcs	.+34     	; 0x526 <__fixunssfsi+0x26>
 504:	9f 57       	subi	r25, 0x7F	; 127
 506:	90 f0       	brcs	.+36     	; 0x52c <__fixunssfsi+0x2c>
 508:	b9 2f       	mov	r27, r25
 50a:	99 27       	eor	r25, r25
 50c:	b7 51       	subi	r27, 0x17	; 23
 50e:	a0 f0       	brcs	.+40     	; 0x538 <__fixunssfsi+0x38>
 510:	d1 f0       	breq	.+52     	; 0x546 <__fixunssfsi+0x46>
 512:	66 0f       	add	r22, r22
 514:	77 1f       	adc	r23, r23
 516:	88 1f       	adc	r24, r24
 518:	99 1f       	adc	r25, r25
 51a:	1a f0       	brmi	.+6      	; 0x522 <__fixunssfsi+0x22>
 51c:	ba 95       	dec	r27
 51e:	c9 f7       	brne	.-14     	; 0x512 <__fixunssfsi+0x12>
 520:	12 c0       	rjmp	.+36     	; 0x546 <__fixunssfsi+0x46>
 522:	b1 30       	cpi	r27, 0x01	; 1
 524:	81 f0       	breq	.+32     	; 0x546 <__fixunssfsi+0x46>
 526:	86 d0       	rcall	.+268    	; 0x634 <__fp_zero>
 528:	b1 e0       	ldi	r27, 0x01	; 1
 52a:	08 95       	ret
 52c:	83 c0       	rjmp	.+262    	; 0x634 <__fp_zero>
 52e:	67 2f       	mov	r22, r23
 530:	78 2f       	mov	r23, r24
 532:	88 27       	eor	r24, r24
 534:	b8 5f       	subi	r27, 0xF8	; 248
 536:	39 f0       	breq	.+14     	; 0x546 <__fixunssfsi+0x46>
 538:	b9 3f       	cpi	r27, 0xF9	; 249
 53a:	cc f3       	brlt	.-14     	; 0x52e <__fixunssfsi+0x2e>
 53c:	86 95       	lsr	r24
 53e:	77 95       	ror	r23
 540:	67 95       	ror	r22
 542:	b3 95       	inc	r27
 544:	d9 f7       	brne	.-10     	; 0x53c <__fixunssfsi+0x3c>
 546:	3e f4       	brtc	.+14     	; 0x556 <__fixunssfsi+0x56>
 548:	90 95       	com	r25
 54a:	80 95       	com	r24
 54c:	70 95       	com	r23
 54e:	61 95       	neg	r22
 550:	7f 4f       	sbci	r23, 0xFF	; 255
 552:	8f 4f       	sbci	r24, 0xFF	; 255
 554:	9f 4f       	sbci	r25, 0xFF	; 255
 556:	08 95       	ret

00000558 <__fp_cmp>:
 558:	99 0f       	add	r25, r25
 55a:	00 08       	sbc	r0, r0
 55c:	55 0f       	add	r21, r21
 55e:	aa 0b       	sbc	r26, r26
 560:	e0 e8       	ldi	r30, 0x80	; 128
 562:	fe ef       	ldi	r31, 0xFE	; 254
 564:	16 16       	cp	r1, r22
 566:	17 06       	cpc	r1, r23
 568:	e8 07       	cpc	r30, r24
 56a:	f9 07       	cpc	r31, r25
 56c:	c0 f0       	brcs	.+48     	; 0x59e <__fp_cmp+0x46>
 56e:	12 16       	cp	r1, r18
 570:	13 06       	cpc	r1, r19
 572:	e4 07       	cpc	r30, r20
 574:	f5 07       	cpc	r31, r21
 576:	98 f0       	brcs	.+38     	; 0x59e <__fp_cmp+0x46>
 578:	62 1b       	sub	r22, r18
 57a:	73 0b       	sbc	r23, r19
 57c:	84 0b       	sbc	r24, r20
 57e:	95 0b       	sbc	r25, r21
 580:	39 f4       	brne	.+14     	; 0x590 <__fp_cmp+0x38>
 582:	0a 26       	eor	r0, r26
 584:	61 f0       	breq	.+24     	; 0x59e <__fp_cmp+0x46>
 586:	23 2b       	or	r18, r19
 588:	24 2b       	or	r18, r20
 58a:	25 2b       	or	r18, r21
 58c:	21 f4       	brne	.+8      	; 0x596 <__fp_cmp+0x3e>
 58e:	08 95       	ret
 590:	0a 26       	eor	r0, r26
 592:	09 f4       	brne	.+2      	; 0x596 <__fp_cmp+0x3e>
 594:	a1 40       	sbci	r26, 0x01	; 1
 596:	a6 95       	lsr	r26
 598:	8f ef       	ldi	r24, 0xFF	; 255
 59a:	81 1d       	adc	r24, r1
 59c:	81 1d       	adc	r24, r1
 59e:	08 95       	ret

000005a0 <__fp_inf>:
 5a0:	97 f9       	bld	r25, 7
 5a2:	9f 67       	ori	r25, 0x7F	; 127
 5a4:	80 e8       	ldi	r24, 0x80	; 128
 5a6:	70 e0       	ldi	r23, 0x00	; 0
 5a8:	60 e0       	ldi	r22, 0x00	; 0
 5aa:	08 95       	ret

000005ac <__fp_nan>:
 5ac:	9f ef       	ldi	r25, 0xFF	; 255
 5ae:	80 ec       	ldi	r24, 0xC0	; 192
 5b0:	08 95       	ret

000005b2 <__fp_pscA>:
 5b2:	00 24       	eor	r0, r0
 5b4:	0a 94       	dec	r0
 5b6:	16 16       	cp	r1, r22
 5b8:	17 06       	cpc	r1, r23
 5ba:	18 06       	cpc	r1, r24
 5bc:	09 06       	cpc	r0, r25
 5be:	08 95       	ret

000005c0 <__fp_pscB>:
 5c0:	00 24       	eor	r0, r0
 5c2:	0a 94       	dec	r0
 5c4:	12 16       	cp	r1, r18
 5c6:	13 06       	cpc	r1, r19
 5c8:	14 06       	cpc	r1, r20
 5ca:	05 06       	cpc	r0, r21
 5cc:	08 95       	ret

000005ce <__fp_round>:
 5ce:	09 2e       	mov	r0, r25
 5d0:	03 94       	inc	r0
 5d2:	00 0c       	add	r0, r0
 5d4:	11 f4       	brne	.+4      	; 0x5da <__fp_round+0xc>
 5d6:	88 23       	and	r24, r24
 5d8:	52 f0       	brmi	.+20     	; 0x5ee <__fp_round+0x20>
 5da:	bb 0f       	add	r27, r27
 5dc:	40 f4       	brcc	.+16     	; 0x5ee <__fp_round+0x20>
 5de:	bf 2b       	or	r27, r31
 5e0:	11 f4       	brne	.+4      	; 0x5e6 <__fp_round+0x18>
 5e2:	60 ff       	sbrs	r22, 0
 5e4:	04 c0       	rjmp	.+8      	; 0x5ee <__fp_round+0x20>
 5e6:	6f 5f       	subi	r22, 0xFF	; 255
 5e8:	7f 4f       	sbci	r23, 0xFF	; 255
 5ea:	8f 4f       	sbci	r24, 0xFF	; 255
 5ec:	9f 4f       	sbci	r25, 0xFF	; 255
 5ee:	08 95       	ret

000005f0 <__fp_split3>:
 5f0:	57 fd       	sbrc	r21, 7
 5f2:	90 58       	subi	r25, 0x80	; 128
 5f4:	44 0f       	add	r20, r20
 5f6:	55 1f       	adc	r21, r21
 5f8:	59 f0       	breq	.+22     	; 0x610 <__fp_splitA+0x10>
 5fa:	5f 3f       	cpi	r21, 0xFF	; 255
 5fc:	71 f0       	breq	.+28     	; 0x61a <__fp_splitA+0x1a>
 5fe:	47 95       	ror	r20

00000600 <__fp_splitA>:
 600:	88 0f       	add	r24, r24
 602:	97 fb       	bst	r25, 7
 604:	99 1f       	adc	r25, r25
 606:	61 f0       	breq	.+24     	; 0x620 <__fp_splitA+0x20>
 608:	9f 3f       	cpi	r25, 0xFF	; 255
 60a:	79 f0       	breq	.+30     	; 0x62a <__fp_splitA+0x2a>
 60c:	87 95       	ror	r24
 60e:	08 95       	ret
 610:	12 16       	cp	r1, r18
 612:	13 06       	cpc	r1, r19
 614:	14 06       	cpc	r1, r20
 616:	55 1f       	adc	r21, r21
 618:	f2 cf       	rjmp	.-28     	; 0x5fe <__fp_split3+0xe>
 61a:	46 95       	lsr	r20
 61c:	f1 df       	rcall	.-30     	; 0x600 <__fp_splitA>
 61e:	08 c0       	rjmp	.+16     	; 0x630 <__fp_splitA+0x30>
 620:	16 16       	cp	r1, r22
 622:	17 06       	cpc	r1, r23
 624:	18 06       	cpc	r1, r24
 626:	99 1f       	adc	r25, r25
 628:	f1 cf       	rjmp	.-30     	; 0x60c <__fp_splitA+0xc>
 62a:	86 95       	lsr	r24
 62c:	71 05       	cpc	r23, r1
 62e:	61 05       	cpc	r22, r1
 630:	08 94       	sec
 632:	08 95       	ret

00000634 <__fp_zero>:
 634:	e8 94       	clt

00000636 <__fp_szero>:
 636:	bb 27       	eor	r27, r27
 638:	66 27       	eor	r22, r22
 63a:	77 27       	eor	r23, r23
 63c:	cb 01       	movw	r24, r22
 63e:	97 f9       	bld	r25, 7
 640:	08 95       	ret

00000642 <__gesf2>:
 642:	8a df       	rcall	.-236    	; 0x558 <__fp_cmp>
 644:	08 f4       	brcc	.+2      	; 0x648 <__gesf2+0x6>
 646:	8f ef       	ldi	r24, 0xFF	; 255
 648:	08 95       	ret

0000064a <__mulsf3>:
 64a:	0a d0       	rcall	.+20     	; 0x660 <__mulsf3x>
 64c:	c0 cf       	rjmp	.-128    	; 0x5ce <__fp_round>
 64e:	b1 df       	rcall	.-158    	; 0x5b2 <__fp_pscA>
 650:	28 f0       	brcs	.+10     	; 0x65c <__mulsf3+0x12>
 652:	b6 df       	rcall	.-148    	; 0x5c0 <__fp_pscB>
 654:	18 f0       	brcs	.+6      	; 0x65c <__mulsf3+0x12>
 656:	95 23       	and	r25, r21
 658:	09 f0       	breq	.+2      	; 0x65c <__mulsf3+0x12>
 65a:	a2 cf       	rjmp	.-188    	; 0x5a0 <__fp_inf>
 65c:	a7 cf       	rjmp	.-178    	; 0x5ac <__fp_nan>
 65e:	eb cf       	rjmp	.-42     	; 0x636 <__fp_szero>

00000660 <__mulsf3x>:
 660:	c7 df       	rcall	.-114    	; 0x5f0 <__fp_split3>
 662:	a8 f3       	brcs	.-22     	; 0x64e <__mulsf3+0x4>

00000664 <__mulsf3_pse>:
 664:	99 23       	and	r25, r25
 666:	d9 f3       	breq	.-10     	; 0x65e <__mulsf3+0x14>
 668:	55 23       	and	r21, r21
 66a:	c9 f3       	breq	.-14     	; 0x65e <__mulsf3+0x14>
 66c:	95 0f       	add	r25, r21
 66e:	50 e0       	ldi	r21, 0x00	; 0
 670:	55 1f       	adc	r21, r21
 672:	aa 27       	eor	r26, r26
 674:	ee 27       	eor	r30, r30
 676:	ff 27       	eor	r31, r31
 678:	bb 27       	eor	r27, r27
 67a:	00 24       	eor	r0, r0
 67c:	08 94       	sec
 67e:	67 95       	ror	r22
 680:	20 f4       	brcc	.+8      	; 0x68a <__mulsf3_pse+0x26>
 682:	e2 0f       	add	r30, r18
 684:	f3 1f       	adc	r31, r19
 686:	b4 1f       	adc	r27, r20
 688:	0a 1e       	adc	r0, r26
 68a:	22 0f       	add	r18, r18
 68c:	33 1f       	adc	r19, r19
 68e:	44 1f       	adc	r20, r20
 690:	aa 1f       	adc	r26, r26
 692:	66 95       	lsr	r22
 694:	a9 f7       	brne	.-22     	; 0x680 <__mulsf3_pse+0x1c>
 696:	77 95       	ror	r23
 698:	30 f4       	brcc	.+12     	; 0x6a6 <__mulsf3_pse+0x42>
 69a:	f3 0f       	add	r31, r19
 69c:	b4 1f       	adc	r27, r20
 69e:	0a 1e       	adc	r0, r26
 6a0:	12 1e       	adc	r1, r18
 6a2:	08 f4       	brcc	.+2      	; 0x6a6 <__mulsf3_pse+0x42>
 6a4:	63 95       	inc	r22
 6a6:	33 0f       	add	r19, r19
 6a8:	44 1f       	adc	r20, r20
 6aa:	aa 1f       	adc	r26, r26
 6ac:	22 1f       	adc	r18, r18
 6ae:	76 95       	lsr	r23
 6b0:	99 f7       	brne	.-26     	; 0x698 <__mulsf3_pse+0x34>
 6b2:	87 95       	ror	r24
 6b4:	20 f4       	brcc	.+8      	; 0x6be <__mulsf3_pse+0x5a>
 6b6:	b4 0f       	add	r27, r20
 6b8:	0a 1e       	adc	r0, r26
 6ba:	12 1e       	adc	r1, r18
 6bc:	63 1f       	adc	r22, r19
 6be:	44 0f       	add	r20, r20
 6c0:	aa 1f       	adc	r26, r26
 6c2:	22 1f       	adc	r18, r18
 6c4:	33 1f       	adc	r19, r19
 6c6:	86 95       	lsr	r24
 6c8:	a9 f7       	brne	.-22     	; 0x6b4 <__mulsf3_pse+0x50>
 6ca:	86 2f       	mov	r24, r22
 6cc:	71 2d       	mov	r23, r1
 6ce:	60 2d       	mov	r22, r0
 6d0:	11 24       	eor	r1, r1
 6d2:	9f 57       	subi	r25, 0x7F	; 127
 6d4:	50 40       	sbci	r21, 0x00	; 0
 6d6:	8a f0       	brmi	.+34     	; 0x6fa <__mulsf3_pse+0x96>
 6d8:	e1 f0       	breq	.+56     	; 0x712 <__mulsf3_pse+0xae>
 6da:	88 23       	and	r24, r24
 6dc:	4a f0       	brmi	.+18     	; 0x6f0 <__mulsf3_pse+0x8c>
 6de:	ee 0f       	add	r30, r30
 6e0:	ff 1f       	adc	r31, r31
 6e2:	bb 1f       	adc	r27, r27
 6e4:	66 1f       	adc	r22, r22
 6e6:	77 1f       	adc	r23, r23
 6e8:	88 1f       	adc	r24, r24
 6ea:	91 50       	subi	r25, 0x01	; 1
 6ec:	50 40       	sbci	r21, 0x00	; 0
 6ee:	a9 f7       	brne	.-22     	; 0x6da <__mulsf3_pse+0x76>
 6f0:	9e 3f       	cpi	r25, 0xFE	; 254
 6f2:	51 05       	cpc	r21, r1
 6f4:	70 f0       	brcs	.+28     	; 0x712 <__mulsf3_pse+0xae>
 6f6:	54 cf       	rjmp	.-344    	; 0x5a0 <__fp_inf>
 6f8:	9e cf       	rjmp	.-196    	; 0x636 <__fp_szero>
 6fa:	5f 3f       	cpi	r21, 0xFF	; 255
 6fc:	ec f3       	brlt	.-6      	; 0x6f8 <__mulsf3_pse+0x94>
 6fe:	98 3e       	cpi	r25, 0xE8	; 232
 700:	dc f3       	brlt	.-10     	; 0x6f8 <__mulsf3_pse+0x94>
 702:	86 95       	lsr	r24
 704:	77 95       	ror	r23
 706:	67 95       	ror	r22
 708:	b7 95       	ror	r27
 70a:	f7 95       	ror	r31
 70c:	e7 95       	ror	r30
 70e:	9f 5f       	subi	r25, 0xFF	; 255
 710:	c1 f7       	brne	.-16     	; 0x702 <__mulsf3_pse+0x9e>
 712:	fe 2b       	or	r31, r30
 714:	88 0f       	add	r24, r24
 716:	91 1d       	adc	r25, r1
 718:	96 95       	lsr	r25
 71a:	87 95       	ror	r24
 71c:	97 f9       	bld	r25, 7
 71e:	08 95       	ret

00000720 <_exit>:
 720:	f8 94       	cli

00000722 <__stop_program>:
 722:	ff cf       	rjmp	.-2      	; 0x722 <__stop_program>
